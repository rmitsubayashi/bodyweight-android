// https://www.veskoiliev.com/how-to-setup-jacoco-for-android-project-with-java-kotlin-and-multiple-flavours/
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.4"
}

// needed for Robolectric
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}


tasks.create(name: "testCoverage", type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports."

    reports {
        html.enabled = true
    }

    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*com.github.rmitsubayashi.bodyweight.Test*.*',
            'android/**/*.*'
            //might also need to exclude Kotlin-generated code
            // https://medium.com/@andrey.fomenkov/kotlin-jacoco-tuning-compiler-to-skip-generated-code-935fcaeaa391
    ]
    def kotlinClasses = fileTree(dir: "$project.buildDir//tmp/kotlin-classes/debug", excludes: excludes)
    classDirectories = files([kotlinClasses])

    sourceDirectories = files([
            "$project.projectDir/src/main/kotlin"
    ])

    executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")
}
